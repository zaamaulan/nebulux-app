// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// enum ArticleStatus {
//   PUBLISHED
//   DRAFT
//   ARCHIVED
//   TRASHED
//   DELETED
//   PRIVATE
// }

model Article {
  id          String     @id @default(cuid())
  title       String
  
  content     String
  slug        String     @unique
  authorId    String?
  category    String
  image       String?
  stars       Int
  bookmarks   Bookmark[]
  author      User?      @relation(fields: [authorId], references: [id], onDelete: SetNull)
  createdAt   DateTime?   @default(now())
  publishedAt DateTime?

  @@index([slug])
}

model Bookmark {
  id        String   @id @default(cuid())
  articleId String?
  article   Article? @relation(fields: [articleId], references: [id], onDelete: SetNull)
  userId    String?
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  createdAt DateTime @default(now())

  @@unique([userId, articleId])
}

model User {
  id        String     @id @default(cuid())
  name      String
  username  String     @unique
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
  bookmarks Bookmark[]
  articles  Article[]

  @@index([email, username])
}
